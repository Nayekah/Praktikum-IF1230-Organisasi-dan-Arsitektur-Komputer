Dump of assembler code for function Monitoring:

0x00001670 <+0>:     push    %ebp
0x00001671 <+1>:     mov     %esp, %ebp
0x00001673 <+3>:     push    %ebx
0x00001674 <+4>:     sub     $0x34, %esp
0x00001677 <+7>:     call    0x12b0 <__x86.get_pc_thunk.bx>
0x0000167c <+12>:    add     $0x58c8, %ebx
0x00001682 <+18>:    mov     0x8(%ebp), %eax
0x00001685 <+21>:    mov     %eax, -0x2c(%ebp)
0x00001688 <+24>:    mov     %gs:0x14, %eax
0x0000168e <+30>:    mov     %eax, -0xc(%ebp)
0x00001691 <+33>:    xor     %eax, %eax
0x00001693 <+35>:    lea     -0x10(%ebp), %eax
0x00001696 <+38>:    push  %eax
0x00001697 <+39>:    lea     -0x14(%ebp), %eax
0x0000169a <+42>:    push    %eax
0x0000169b <+43>:    lea     -0x18(%ebp), %eax
0x0000169e <+46>:    push    %eax
0x0000169f <+47>:    lea     -0x1c(%ebp), %eax
0x000016a2 <+50>:    push    %eax
0x000016a3 <+51>:    lea     -0x20(%ebp), %eax
0x000016a6 <+54>:    push    %eax
0x000016a7 <+55>:    lea     -0x24(%ebp), %eax
0x000016aa <+58>:    push    %eax
0x000016ab <+59>:    lea     -0x2b19(%ebx), %eax
0x000016b1 <+65>:    push    %eax
0x000016b2 <+66>:    push -0x2c(%ebp)
0x000016b5 <+69>:    call    0x11c0 <__isoc99_sscanf@plt>
0x000016ba <+74>:    add     $0x20, %esp
0x000016bd <+77>:    mov     -0x24(%ebp), %eax
0x000016c0 <+80>:    cmp     $0x1, %eax
0x000016c3 <+83>:    jne     0x16ed <Monitoring+125>
0x000016c5 <+85>:    mov     -0x20(%ebp), %eax
0x000016c8 <+88>:    cmp     $0x3, %eax
0x000016cb <+91>:    jne     0x16ed <Monitoring+125>
0x000016cd <+93>:    mov     -0x1c(%ebp), %eax
0x000016d0 <+96>:    cmp     $0x5, %eax
0x000016d3 <+99>:   jne     0x16ed <Monitoring+125>
0x000016d5 <+101>:   mov     -0x18(%ebp),%eax
0x000016d8 <+104>:   cmp     $0x7,%eax
0x000016db <+107>:   jne     0x16ed <Monitoring+125>
0x000016dd <+109>:   mov     -0x14(%ebp), %eax
0x000016e0 <+112>:   cmp     $0x9,%eax
0x000016e3 <+115>:   jne     0x16ed <Monitoring+125>
0x000016e5 <+117>:   mov     -0x10(%ebp), %eax
0x000016e8 <+120>:   cmp     $0xa,%eax
0x000016eb <+123>:   je    0x16f2 <Monitoring_130>
0x000016ed <+125>:   call 0x2d4b <trap>
0x000016f2 <+130>:   nop
0x000016f3 <+131>:   mov     -oxc(%ebp), %eax
0x000016f6 <+134>:   sub      %gs:0x14,%eax
0x000016fd <+141>:   je    0x1704 <Monitoring+148>
0x000016ff <+143>:   call     0x3dd0 <__stack_chk_fail_local>
0x00001704<+148>: mov    -0x4(%ebp),%ebx
0x00001707 <+151>:   leave
0x00001708 <+152>:   ret
